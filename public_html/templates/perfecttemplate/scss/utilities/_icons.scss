@font-face {
  font-family: "icons";
  src:    url("../fonts/icons/icons.eot");
  src:    url("../fonts/icons/icons.eot?#iefix") format("embedded-opentype"),
  url("../fonts/icons/icons.woff") format("woff"),
  url("../fonts/icons/icons.ttf") format("truetype"),
  url("../fonts/icons/icons.svg#icons") format("svg");
  font-weight: normal;
  font-style: normal;
}
@media screen and (-webkit-min-device-pixel-ratio: 0) {
  @font-face {
    font-family: "icons";
    src: url("../fonts/icons/icons.svg#icons") format("svg");
  }
}

// Font icon pseudo-element base styles
%icon {
  speak: none;
  text-rendering: optimizeLegibility;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-smoothing: antialiased;
  text-transform: none;
  line-height: 1;
  font: {
    style: normal;
    variant: normal;
    weight: normal;
    family: 'icons';
  }
  &:before {
    display: inline-block;
    margin: auto;
  }
}

// Creating the map
$icons: (
  chevron-bottom: "\f101",
  chevron-down: "\f102",
  chevron-left: "\f103",
  chevron-right: "\f104",
  chevron-up: "\f105",
  clock-o: "\f106",
  cog: "\f107",
  download: "\f108",
  file-pdf-o: "\f109",
  file-word-o: "\f10a",
  home: "\f10b",
  icon: "\f10c",
  info-circle: "\f10d",
  linkedin: "\f10e",
  map-marker: "\f10f",
  mobile-phone: "\f110",
  paper-plane: "\f111",
  phone: "\f112",
  question-circle: "\f113",
  search: "\f114",
  sitemap: "\f115",
  star-o: "\f116",
  star: "\f117",
  times: "\f118",
  twitter: "\f119",
  youtube-play: "\f11a",);


// Creating classnames of all icons
@each $name, $icon in $icons {
  .icon-#{$name} {
    @extend %icon;
    &:before {
      content: "#{$icon}";
    }
  }
}

// For adding icons to elements using CSS pseudo-elements
@mixin icon-before($icon: false, $styles: false) {
  &:before {
    @if $icon {
      content: "#{map-get($icons, $icon)}";
    }
    @if $styles {
      @extend %icon;
    }
    @content;
  }
}
@mixin icon-after($icon: false, $styles: false) {
  &:after {
    @if $icon {
      content: "#{map-get($icons, $icon)}";
    }
    @if $styles {
      @extend %icon;
    }
    @content;
  }
}
@mixin icon-both($icon: false, $styles: false) {
  &:before,
  &:after {
    @if $icon {
      content: "#{map-get($icons, $icon)}";
    }
    @if $styles {
      @extend %icon;
    }
    @content;
  }
}